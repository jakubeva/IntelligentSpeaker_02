# -*- coding: utf-8 -*-
import sys

# Form implementation generated from reading ui file 'speaker.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from asr_tf.asr_server import recognize
from asr_tf.record import record
from chatbot_pytorch.evaluate import *
from tts_pytorch.VC_inference import get_audio

i = 1


# asr_datapath = '../asr_tf/'
# asr_modelpath = 'model_speech/'
# ms = ModelSpeech(asr_datapath)
# ms.LoadModel(asr_modelpath + 'm251bn/speech_model251bn_e_0_step_40000（预训练）.base.h5')
#
# ml = ModelLanguage('model_language')
# ml.LoadModel()


def recognizeSpeech(filename):
    # 录音
    record(filename, time=2)
    # 返回识别内容
    return recognize(filename)


class Ui_MainWindow(QMainWindow):
    def __init__(self, parent=None):
        super(Ui_MainWindow, self).__init__(parent)
        # self.ui = Ui_MainWindow()  # 创建UI对象

        self.gridLayoutWidget = None
        self.gridLayout = None
        self.scrollAreaWidgetContents = None
        self.scrollArea = None
        self.speak = None
        self.clear = None
        self.chat = None
        self.label = None
        self.centralwidget = None
        self.textEdit_i = None
        self.textEdit_j = None

        self.setupUi(self)  # 构造UI界面
        self.show()
        self.connecter()

    def clickSpeak(self):
        global i
        r = recognizeSpeech("record.wav")
        self.textEdit_i = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.textEdit_i.setMaximumSize(QtCore.QSize(16777215, 100))
        self.textEdit_i.setObjectName(f"textEdit_{i}")
        self.gridLayout.addWidget(self.textEdit_i, i, 2, 1, 1)
        self.textEdit_i.setText(r)
        print("test")
        i += 2

        # global j
        # self.textEdit_j = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        # self.textEdit_j.setMaximumSize(QtCore.QSize(16777215, 100))
        # self.textEdit_j.setObjectName(f"textEdit_{i + 1}")
        # self.gridLayout.addWidget(self.textEdit_j, i + 1, 1, 1, 1)
        # self.textEdit_j.setText("你好！")

    def clickChat(self):
        global i
        self.textEdit_j = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.textEdit_j.setMaximumSize(QtCore.QSize(16777215, 100))
        self.textEdit_j.setObjectName(f"textEdit_{i - 1}")
        self.gridLayout.addWidget(self.textEdit_j, i - 1, 1, 1, 1)
        self.textEdit_j.setText(chat(self.textEdit_i.toPlainText()))

        get_audio(self.textEdit_j.toPlainText())

        # i += 2

    def clickClear(self):
        global i
        print("点击clear")
        item_list = list(range(self.gridLayout.count()))
        item_list.reverse()
        for i in item_list:
            item = self.gridLayout.itemAt(i)
            self.gridLayout.removeItem(item)
            if item.widget():
                item.widget().deleteLater()
        i = 1

    def connecter(self):
        # pushButton是所需绑定的控件的 objectName，pushbutton_p 是所需绑定的函数
        self.speak.clicked.connect(self.clickSpeak)
        self.chat.clicked.connect(self.clickChat)
        self.clear.clicked.connect(self.clickClear)
        # 控制滑动条一直在最底下
        self.scrollArea.verticalScrollBar().rangeChanged.connect(
            lambda: self.scrollArea.verticalScrollBar().setValue(
                self.scrollArea.verticalScrollBar().maximum()
            )
        )

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 1200)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        MainWindow.setFont(font)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.clear = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.clear.sizePolicy().hasHeightForWidth())
        self.clear.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 120, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        self.clear.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.clear.setFont(font)
        self.clear.setObjectName("clear")
        self.verticalLayout.addWidget(self.clear)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 763, 436))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        # self.textEdit_5 = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        # self.textEdit_5.setObjectName("textEdit_5")
        # self.gridLayout.addWidget(self.textEdit_5, 4, 2, 1, 1)
        # self.textEdit_2 = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        # self.textEdit_2.setObjectName("textEdit_2")
        # self.gridLayout.addWidget(self.textEdit_2, 1, 2, 1, 1)
        # self.textEdit_4 = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        # self.textEdit_4.setObjectName("textEdit_4")
        # self.gridLayout.addWidget(self.textEdit_4, 2, 0, 1, 1)
        # self.textEdit = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        # self.textEdit.setObjectName("textEdit")
        # self.gridLayout.addWidget(self.textEdit, 0, 0, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout.addWidget(self.scrollArea)
        self.speak = QtWidgets.QToolButton(self.centralwidget)
        self.speak.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.speak.sizePolicy().hasHeightForWidth())
        self.speak.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.speak.setFont(font)
        self.speak.setMouseTracking(False)
        self.speak.setTabletTracking(False)
        self.speak.setFocusPolicy(QtCore.Qt.TabFocus)
        self.speak.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.speak.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.speak.setInputMethodHints(QtCore.Qt.ImhNone)
        self.speak.setAutoRaise(False)
        self.speak.setObjectName("speak")
        self.verticalLayout.addWidget(self.speak)
        self.chat = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        self.chat.setFont(font)
        self.chat.setObjectName("chat")
        self.verticalLayout.addWidget(self.chat)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 783, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "智能音箱"))
        self.label.setText(_translate("MainWindow", "智能音箱"))
        self.speak.setText(_translate("MainWindow", "说话"))
        self.clear.setText(_translate("MainWindow", "清除记录"))
        self.chat.setText(_translate("MainWindow", "聊天"))


if __name__ == "__main__":
    # 创建应用
    window_application = QApplication(sys.argv)
    # 设置登录窗口
    mainWindow = Ui_MainWindow()
    # mainWindow.show()
    sys.exit(window_application.exec_())
